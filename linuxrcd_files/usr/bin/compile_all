#! /bin/bash
#    Copyright (c) 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016 nerdopolis (or n3rdopolis) <bluescreen_avenger@verzion.net>
#
#    This file is part of LinuxRCD
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

#This script calls all files in /usr/bin/Compile in the needed order. it also fowards if it was called with build-only or download-only to the scripts.
#It also configures build_core (which is used by all of the build scripts) to create debs as they build, by turning on the MAKEDEBS argument.

argument=$1

export MAKEDEBS=1


#build these packages in this order. # symbol is a comment
if [[ ! -e /usr/lib/casper ]]
then
  COMPILELIST+="casper"
  COMPILELIST+=$'\n'
fi

if [[ ! -e /usr/share/initramfs-tools/hooks/lupin_casper ]]
then
  COMPILELIST+="lupin"
  COMPILELIST+=$'\n'
fi

echo "$COMPILELIST" | awk -F "#" '{print $1}' | while read BUILDNAME
do

  #compile_all is running to download the source
  if [[ "$argument" == download-only ]]
  then
    echo "Downloading/updating $BUILDNAME source"
    "/usr/bin/Compile/$BUILDNAME" download-only 2>&1 
  fi

  #compile_all is running to build the source
  if [[ "$argument" == build-only ]]
  then
    echo "building $BUILDNAME"
    "/usr/bin/Compile/$BUILDNAME" build-only 2>&1
  fi

  #Install the smaller version of the package
  if [[ "$argument" == installsmallpackage ]]
  then
    echo "Attempting to install smaller version of $BUILDNAME"
    "/usr/bin/Compile/$BUILDNAME" installsmallpackage 2>&1
  fi
  
  #compile_all is running to clean the source
  if [[ "$argument" == clean ]]
  then
    echo "Cleaning $BUILDNAME"
    "/usr/bin/Compile/$BUILDNAME" clean 2>&1
  fi
  
  #compile_all is running to download and build
  if [[ ! -n "$argument" ]]
  then
    "/usr/bin/Compile/$BUILDNAME"
  fi

done
