#! /bin/bash 
#    Copyright (c) 2009, 2010, 2011, nerdopolis (or n3rdopolis) <bluescreen_avenger@version.net>
#
#    This file is part of LinuxRCD.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


#File to handle the translation of the libraries so that the programs can run in the target system. takes one argument, the path of the executable ELF file to patch. The dependant libraries of the executable ELF passed will also be copied and patched

#create the folder that the libs will go (this runs BEFORE the files are moved to /RCD.
mkdir /usr/RCDbin

#create the holding folder for the libraries that will be patched
mkdir /tmp/change-libscache


#get the number of seconds into a variable so that multiple copies of this script can run  at once
secondsstart=$(date +%s)

#get the library depenancies of the binary file that was passed as the argument, and output that list.
ldd $1 | grep -v linux-gate | grep -v ld-linux.so | awk '{print $3}' > /tmp/libraries$secondsstart

#grab the name of the interpreter, or the main library/program that handles the loading of the program's library depenancies, before starting the program. 
interpretername=$(ldd $1 | grep ld-linux.so |  awk '{print $1}' | rev | awk -F '/' '{print $1}' | rev )

#read the list of the files, and copy them into the working location
cat /tmp/libraries$secondsstart | while read library
do
#copy the current library
cp  $library /tmp/change-libscache
done

#copy the executable passed as an argument into the working location
cp  $1 /tmp/change-libscache

#delete the list of libraries
rm /tmp/libraries$secondsstart

#change the search path for libraries, in every libary, and executable in the working location (or rpath). add the rpath to the files if its not there, and set it. also attempt to set the interpreter. Not all libraries have one so there might be errors from patchelf 
ls /tmp/change-libscache/ | while read exefile
do
#add the rpath
patchelf --force-rpath  /tmp/change-libscache/$exefile
#set the rpath
patchelf --set-rpath  /RCD/RCDbin /tmp/change-libscache/$exefile
#try to set the interpreter
patchelf --set-interpreter /RCD/RCDbin/$interpretername /tmp/change-libscache/$exefile 
done

#move the files from the working location, into the actual location. This is set to go to /usr/RCDbin because this script runs before everything is moved to /usr
mv /tmp/change-libscache/* /usr/RCDbin
#copy the interpreter into the actual location. Don't move it because it was not copied into the working location. the source interpreter is still in its system location.
cp $(ldd $1 | grep ld-linux.so |  awk '{print $1}') /usr/RCDbin