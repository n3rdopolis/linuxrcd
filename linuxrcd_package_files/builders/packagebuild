#! /bin/bash
#    Copyright (c) 2009, 2010, 2011, nerdopolis (or n3rdopolis) <bluescreen_avenger@version.net>
#
#    This file is part of LinuxRCD.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

#this script will take one argument, that is the package name to be built
buildpackage="$1"
#switch into the new directory
cd $buildpackage
#delete the patches that come with the source files 
#rm ../*.diff.gz
#rm ../*.dsc 
#rm debian/patches/*.diff
#rm debian/patches/*.patch
#rm debian/patches/*.dpatch

echo "patching files in this packages tar files downloaded from apt-get source to not use usr"
#patch up the .tar.gz files as some packages like to use them
find . -name "*.tar.gz"  | while read TARFILE
do
/builders/taredit "$TARFILE" $buildpackage
done








#change into the directory of the source code folder
cd *

echo "Editing files in this packages source tree to not use usr"

#build the package
yes | debuild -us -uc -b -rsudo
buildstatus=${PIPESTATUS[1]}
#go back one directory into the directory made for the selected package
cd ..
#copy all build debs out of this folder and into the folder that will be be copied before the rest of the chroot environment gets deleted
cp *.deb /usr/packageoutput
cp *.udeb /usr/packageoutput
#go back one directory into the directory this script was started.
cd .. 

#delete the folder it was built in. some of the packages end up being HUGE directories.
rm -rf $buildpackage




echo $buildstatus > "/tmp/$buildpackage.status"
